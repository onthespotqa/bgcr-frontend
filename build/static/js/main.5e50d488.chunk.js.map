{"version":3,"sources":["serviceWorker.js","components/KeyedRoute.jsx","views/Nav/NavBar.js","views/Nav/search.js","utils/shadeCategories.js","views/Gurus/show.js","views/Gurus/guruForm.js","views/Gurus/new.js","utils/resource.js","views/Gurus/index.js","components/Input.js","components/Button.js","components/Select.js","views/Foundations/foundationForm.js","views/Foundations/new.js","views/Gurus/edit.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","KeyedRoute","this","props","component","moreProps","key","pathname","Component","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","to","shadeCategories","id","shadeCategoryLookup","1","2","3","4","5","6","Guru","toggleItemEditing","index","setState","items","state","map","item","itemIndex","isEditing","handleItemUpdate","event","target","value","name","loaded","gurus","blog","undertone","skin","group","foundations","brand","shade","fetch","then","res","json","data","row","console","log","method","fData","body","JSON","stringify","headers","c","formattedUndertones","join","Paper","Box","m","p","Card","CardContent","gutterBottom","List","ListItem","ListItemText","primary","secondary","find","Number","CardActions","Button","size","style","maxWidth","columns","field","onRowClick","rowData","showGuru","options","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","indexOf","updateFoundation","onRowDelete","deleteFoundation","splice","guru","onSubmit","values","a","response","history","push","validate","GuruForm","margin","initialValues","render","handleSubmit","reset","submitting","pristine","noValidate","Grid","container","xs","fullWidth","required","TextField","type","label","FormControl","FormLabel","FormGroup","FormControlLabel","control","Radio","Checkbox","htmlFor","Select","placeholder","format","Array","isArray","category","MenuItem","marginTop","onClick","disabled","GuruNew","Container","linkTo","obj","root","overflowX","button","GuruIndex","isFetching","catch","href","lookup","deleteGuru","grouping","withStyles","Input","for","inputType","onChange","handleChange","FormButton","action","option","FoundationForm","newFoundation","shadeOptions","handleClearForm","bind","handleInput","params","e","foundationData","preventDefault","newGuru","prevState","handleFormSubmit","withRouter","GuruFoundationNew","GuruEdit","Sentry","dsn","App","results","default","exact","path","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e50d488.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Route } from 'react-router';\n\nclass KeyedRoute extends Component {\n    render() {\n        const { component, location, ...moreProps } = this.props;\n        return (\n            <Route\n                key={location.pathname}\n                {...moreProps}\n                component={component}\n            />\n        );\n    }\n}\n\nexport default  KeyedRoute","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { NavLink } from \"react-router-dom\";\nimport Search from \"./search\";\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\"\n        }\n    },\n    search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25)\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(3),\n            width: \"auto\"\n        }\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    inputRoot: {\n        color: \"inherit\"\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: 200\n        }\n    },\n    sectionDesktop: {\n        display: \"none\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"flex\"\n        }\n    },\n    sectionMobile: {\n        display: \"flex\",\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"none\"\n        }\n    }\n}));\n\nexport default function PrimarySearchAppBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        <NavLink to={'/'}>Foundation Finder</NavLink>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport SearchBar from 'material-ui-search-bar'\n\nclass Search extends Component {\n    constructor() {\n        super()\n        this.state = {\n            query: '',\n            results: []\n        }\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    filterGurus = (query) => {\n        fetch(`/api/v1/gurus`)\n            .then(res => res.json())\n            .then((data) => {\n                debugger\n                data = data.filter(function(item){\n                    if (item.blog.toLowerCase().includes(query.toLowerCase())) {\n                        return true;\n                    }\n                });\n                this.setState({\n                    results: data\n                })\n            })\n    }\n\n    handleSearch(e) {\n        this.setState({\n            query: e.target.value\n        }, () => {\n            if (this.state.query && this.state.query.length > 2) {\n                this.filterGurus(this.state.query)\n            } else if (!this.state.query) {\n                // eslint-disable-next-line no-unused-expressions\n                this.state.results\n            }\n        })\n    }\n\n    render() {\n        return (\n          <SearchBar\n            value={this.state.value}\n            onChange={(query) => this.filterGurus(query)}\n            onRequestSearch={() => console.log(this.state.results)}\n          />\n        )\n    }\n\n}\n\nexport default Search","const shadeCategories = [{id: 1, title: 'Light'}, {id: 2, title: 'Medium'}, {id: 3, title: 'Tan'}, {id: 4, title: 'Deep'}, {id: 5, title: 'Dark'}, {id: 6, title: 'No Group'}]\n\nexport function findShadeCategory(c){\n  return shadeCategories.find( ({ id }) => id === Number(c.group) ).title\n}\n\nexport const shadeCategoryLookup = {1: 'Light', 2: 'Medium', 3: 'Tan', 4: 'Deep', 5: 'Dark', 6: 'No Group'}\n\nexport default shadeCategories","import React, {Component} from 'react'\nimport shadeCategories from \"../../utils/shadeCategories\";\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport {Link} from \"react-router-dom\";\nimport {findShadeCategory} from \"../../utils/shadeCategories\";\n\nimport MaterialTable from \"material-table\";\n\nclass Guru extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      gurus: {\n        id: '',\n        blog: '',\n        undertone: [],\n        skin: '',\n        group: '',\n        foundations: [{\n          brand: '',\n          shade: ''\n        }]\n      },\n    };\n\n    fetch(`/api/v1${props.location.pathname}`)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({gurus: data, loaded: true})\n      })\n  }\n\n  toggleItemEditing = index => {\n    this.setState({\n      items: this.state.items.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          return {\n            ...item,\n            isEditing: !item.isEditing\n          }\n        }\n        return item;\n      })\n    });\n  };\n\n  handleItemUpdate = (event, index) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      items: this.state.items.map((item, itemIndex) => {\n        if (itemIndex === index) {\n          return {\n            ...item,\n            [name]: value\n          }\n        }\n        return item;\n      })\n    });\n  };\n\n  deleteFoundation(row) {\n    const id = this.state.gurus.foundations[row].id\n    console.log('Deleted ' + this.state.gurus.foundations[row])\n    fetch(`/api/v1/gurus/${this.state.gurus.id}/foundations/${id}`, {method: 'DELETE'})\n  }\n\n  updateFoundation(row, fData) {\n    const id = this.state.gurus.foundations[row].id\n    console.log('Updated ' + this.state.gurus.foundations[row])\n    fetch(`/api/v1/gurus/${this.state.gurus.id}/foundations/${id}`, {method: 'PATCH',  body: JSON.stringify(fData),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }})\n  }\n\n  render() {\n    const {id, blog, undertone, skin, group, foundations} = this.state.gurus;\n    const formattedUndertones = undertone ? undertone.join(', ') : ''\n    if (this.state.loaded) {\n      return (\n        <Paper>\n          <Box m={5} p={5}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                {blog}\n              </Typography>\n              <Typography>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                  <ListItem>\n                    <ListItemText primary=\"Undertone\" secondary={formattedUndertones}/>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Skin Type\" secondary={skin}/>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Shade Category\" secondary={findShadeCategory(this.state.gurus)}/>\n                  </ListItem>\n                </List>\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button size=\"small\"><Link to={`/gurus/${id}/edit`}>Edit</Link></Button>\n              <Button size=\"small\"><Link to={`/gurus/${id}/foundations/new`}>Add Foundation</Link></Button>\n            </CardActions>\n          </Card>\n          </Box>\n          <Box m={5} p={2}>\n          <div style={{maxWidth: \"100%\"}}>\n            <MaterialTable\n              columns={[\n                {title: \"Brand\", field: \"brand\"},\n                {title: \"Shade\", field: \"shade\"},\n              ]}\n              data={foundations}\n              onRowClick={(event, rowData, showGuru) => showGuru}\n              title=\"Foundation Shades\"\n              options={{search: false}}\n              editable={{\n                onRowUpdate: (newData, oldData) =>\n                  new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                      {\n                        const data = this.state.gurus.foundations;\n                        const index = data.indexOf(oldData);\n                        this.updateFoundation(index)\n                        data[index] = newData;\n                        this.updateFoundation(index, data[index])\n                        this.setState({ data }, () => resolve());\n                      }\n                      resolve()\n                    }, 1000)\n                  }),\n                onRowDelete: oldData =>\n                  new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                      {\n                        let data = this.state.gurus.foundations;\n                        const index = data.indexOf(oldData);\n                        this.deleteFoundation(index)\n                        data.splice(index, 1);\n                        this.setState({ data }, () => resolve());\n                      }\n                      resolve()\n                    }, 1000)\n                  }),\n              }}\n            />\n          </div>\n          </Box>\n        </Paper>\n      )\n    } else {\n      return (<p>Loading</p>)\n    }\n  }\n}\n\nexport default Guru;","/* eslint-disable */\nimport React, {Component} from 'react';\n\nimport ReactDOM from 'react-dom';\nimport {withRouter} from 'react-router';\nimport shadeCategories from \"../../utils/shadeCategories\";\nimport * as Yup from 'yup';\n\nimport { Form, Field } from 'react-final-form';\nimport { TextField, Checkbox, Radio, Select } from 'final-form-material-ui';\nimport {\n  Typography,\n  Paper,\n  Link,\n  Grid,\n  Button,\n  CssBaseline,\n  RadioGroup,\n  FormLabel,\n  MenuItem,\n  FormGroup,\n  FormControl,\n  FormControlLabel,\n} from '@material-ui/core';\n\nconst guru = {\n  blog: '',\n  undertone: [],\n  skin: '',\n  group: ''\n}\n\nconst onSubmit = async values => {\n  fetch('/api/v1/gurus',{\n    method: \"POST\",\n    body: JSON.stringify(values),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n  }).then(response => {\n    response.json().then(data =>{\n      console.log(\"Successful\" + data);\n      this.props.history.push(\n        `/gurus/${data.id}`\n      );\n    })\n  })\n}\n\nconst validate = values => {\n\n}\n\nconst undertoneOptions = ['Yellow', 'Olive', 'Pink', 'Red', 'Neutral', 'Golden']\nconst skinTypeOptions = ['Dry', 'Oily', 'Combination/Dry', 'Combination/Oily', 'Normal/Dry', 'Normal']\nconst shadeOptions = ['Fair', 'Light', 'Medium', 'Tan', 'Deep', 'Dark']\n\nclass GuruForm extends Component {\n  render() {\n    return (\n      <div style={{ padding: 16, margin: 'auto', maxWidth: 600 }}>\n        <Form\n          onSubmit={onSubmit}\n          initialValues={guru}\n          validate={validate}\n          render={({ handleSubmit, reset, submitting, pristine, values }) => (\n            <form onSubmit={handleSubmit} noValidate>\n              <Paper style={{ padding: 16 }}>\n                <Grid container alignItems=\"flex-start\" spacing={2}>\n                  <Grid item xs={12}>\n                    <Field\n                      fullWidth\n                      required\n                      name=\"blog\"\n                      component={TextField}\n                      type=\"text\"\n                      label=\"Guru Name\"\n                    />\n                  </Grid>\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Skin Type</FormLabel>\n                      <FormGroup row>\n                        <FormControlLabel\n                          label=\"Dry\"\n                          control={\n                            <Field\n                              name=\"skin\"\n                              component={Radio}\n                              type=\"checkbox\"\n                              value=\"dry\"\n                            />\n                          }\n                        />\n                        <FormControlLabel\n                          label=\"Oily\"\n                          control={\n                            <Field\n                              name=\"skin\"\n                              component={Radio}\n                              type=\"checkbox\"\n                              value=\"oily\"\n                            />\n                          }\n                        />\n                        <FormControlLabel\n                          label=\"Combination/Dry\"\n                          control={\n                            <Field\n                              name=\"skin\"\n                              component={Radio}\n                              type=\"checkbox\"\n                              value=\"combo_dry\"\n                            />\n                          }\n                        />\n                        <FormControlLabel\n                          label=\"Normal/Dry\"\n                          control={\n                            <Field\n                              name=\"skin\"\n                              component={Radio}\n                              type=\"checkbox\"\n                              value=\"normal_dry\"\n                            />\n                          }\n                        />\n                        <FormControlLabel\n                          label=\"Normal\"\n                          control={\n                            <Field\n                              name=\"skin\"\n                              component={Radio}\n                              type=\"checkbox\"\n                              value=\"normal\"\n                            />\n                          }\n                        />\n                      </FormGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Undertone</FormLabel>\n                      <FormGroup row>\n                        <FormControlLabel\n                          label=\"Yellow\"\n                          control={\n                            <Field\n                              name=\"undertone\"\n                              component={Checkbox}\n                              type=\"checkbox\"\n                              value=\"yellow\"\n                            />\n                          }\n                        />\n                        <FormControlLabel\n                          label=\"Olive\"\n                          control={\n                            <Field\n                              name=\"undertone\"\n                              component={Checkbox}\n                              type=\"checkbox\"\n                              value=\"olive\"\n                            />\n                          }\n                        />\n                        <FormControlLabel\n                          label=\"Pink\"\n                          control={\n                            <Field\n                              name=\"undertone\"\n                              component={Checkbox}\n                              type=\"checkbox\"\n                              value=\"pink\"\n                            />\n                          }\n                        />\n                        <FormControlLabel\n                          label=\"Red\"\n                          control={\n                            <Field\n                              name=\"undertone\"\n                              component={Checkbox}\n                              type=\"checkbox\"\n                              value=\"red\"\n                            />\n                          }\n                        />\n                        <FormControlLabel\n                          label=\"Neutral\"\n                          control={\n                            <Field\n                              name=\"undertone\"\n                              component={Checkbox}\n                              type=\"checkbox\"\n                              value=\"neutral\"\n                            />\n                          }\n                        />\n                        <FormControlLabel\n                          label=\"Golden\"\n                          control={\n                            <Field\n                              name=\"undertone\"\n                              component={Checkbox}\n                              type=\"checkbox\"\n                              value=\"golden\"\n                            />\n                          }\n                        />\n                      </FormGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormLabel htmlFor=\"group\">Shade Category</FormLabel>\n                    <Field\n                      name=\"group\"\n                      component={Select}\n                      placeholder={'Select Shade Group'}\n                      format={value => Array.isArray(value) ? value : []} // eslint-disable-line\n                    >\n                      {shadeCategories.map((category) => (\n                        <MenuItem key={category.id} value={category.id}>{category.title}</MenuItem>\n                      ))}\n                    </Field>\n                  </Grid>\n                  <Grid item style={{ marginTop: 16 }}>\n                    <Button\n                      type=\"button\"\n                      variant=\"contained\"\n                      onClick={reset}\n                      disabled={submitting || pristine}\n                    >\n                      Reset\n                    </Button>\n                  </Grid>\n                  <Grid item style={{ marginTop: 16 }}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      disabled={submitting}\n                    >\n                      Submit\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Paper>\n              <pre>{JSON.stringify(values, 0, 2)}</pre>\n            </form>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GuruForm;","import React, { Component } from 'react';\nimport GuruForm from './guruForm'\nimport Container from '@material-ui/core/Container';\n\nexport default class GuruNew extends Component {\n\n    render() {\n        return(\n            <Container>\n                <h1>Add Beauty Guru</h1>\n                <GuruForm/>\n            </Container>\n            )\n    }\n}","export function linkTo(obj) {\n return `/gurus/${obj.id}`\n}\n\nexport default linkTo;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types';\nimport '../../App.css'\nimport {Link} from \"react-router-dom\";\nimport {linkTo} from \"../../utils/resource\";\nimport {shadeCategoryLookup} from '../../utils/shadeCategories'\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\n\nimport MaterialTable from \"material-table\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from '@material-ui/core/Paper';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n  },\n  button: {\n    marginTop: 10\n  }\n}));\n\n\nclass GuruIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: false,\n      gurus: [],\n    };\n    this.setState({...this.state, isFetching: true});\n    fetch(`/api/v1/gurus`)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({gurus: data})\n      })\n      .catch(console.log)\n  }\n\n  deleteGuru(index) {\n    const id = this.state.gurus[index].id\n    console.log('Deleted ' + this.state.gurus[index])\n    fetch(`/api/v1/gurus/${id}`, {method: 'DELETE'})\n  }\n\n  render() {\n    const gurus = this.state.gurus;\n    const {classes} = this.props;\n    return (\n      <Paper className={classes.root}>\n        <Box m={4}>\n          <Button href={'/gurus/new'} variant={\"contained\"} color={\"primary\"}>Add a Beauty Guru\n          </Button>\n        </Box>\n        <Box p={2}>\n          <div style={{maxWidth: \"100%\"}}>\n            <MaterialTable\n              columns={[\n                {\n                  field: 'blog',\n                  title: 'Beauty Guru',\n                  render: rowData => <Link to={linkTo(rowData)}>{rowData.blog}</Link>\n                },\n                {title: \"Skin Type\", field: \"skin\"},\n                {title: \"Undertones\", field: \"undertone\"},\n                {title: \"Shade Category\", field: \"group\",\n                  lookup: shadeCategoryLookup}\n              ]}\n              data={gurus}\n              onRowClick={(event, rowData, showGuru) => showGuru}\n              title=\"Beauty Gurus\"\n              editable={{\n                onRowDelete: oldData =>\n                  new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                      {\n                        let data = this.state.gurus;\n                        const index = data.indexOf(oldData);\n                        this.deleteGuru(index)\n                        data.splice(index, 1);\n                        this.setState({data}, () => resolve());\n                      }\n                      resolve()\n                    }, 1000)\n                  }),\n              }}\n              options={{\n                grouping: true\n              }}\n            />\n          </div>\n        </Box>\n      </Paper>\n    )\n  }\n}\n\nGuruIndex.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(useStyles)(GuruIndex);","import React from \"react\";\n\nconst Input = props => {\n    return (\n        <div className=\"form-group\">\n            <label for={props.name} className=\"form-label\">\n                {props.title}\n            </label>\n            <input\n                className=\"form-control\"\n                id={props.name}\n                name={props.name}\n                type={props.inputType}\n                value={props.value}\n                onChange={props.handleChange}\n                placeholder={props.placeholder}\n            />\n        </div>\n    );\n}\n\nexport default Input","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nconst FormButton = props => {\n    return (\n        <Button\n            type={\"button\"}\n            variant={props.variant}\n            color={props.color}\n            onClick={props.action}\n        >\n            {props.title}\n        </Button>\n    );\n};\n\nexport default FormButton;\n","import React from 'react'\n\nconst Select = props => {\n    return (\n        <div className=\"form-group\">\n            <label for={props.name}> {props.title} </label>\n            <select\n                id={props.name}\n                name={props.name}\n                value={props.value}\n                onChange={props.handleChange}\n                className=\"form-control\"\n            >\n                <option value=\"\" disabled>\n                    {props.placeholder}\n                </option>\n                {props.options.map(option => {\n                    return (\n                        <option key={option} value={option} label={option}>\n                            {option}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport default Select;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport Input from \"../../components/Input\";\nimport FormButton from \"../../components/Button\";\nimport Select from \"../../components/Select\";\n\nclass FoundationForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newFoundation: {\n                brand: '',\n                shade: '',\n                group: ''\n            },\n            shadeOptions: ['Light', 'Medium', 'Tan', 'Deep']\n        }\n        this.handleClearForm = this.handleClearForm.bind(this);\n        this.handleInput = this.handleInput.bind(this)\n    }\n\n    componentDidMount () {\n        this.setState({params: this.props.match.params})\n    }\n\n    handleFormSubmit(e) {\n        debugger\n        let foundationData = this.state.newFoundation;\n        fetch(`/api/v1/gurus/${this.state.params.id}/foundations`,{\n            method: \"POST\",\n            body: JSON.stringify(foundationData),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        }).then(response => {\n            response.json().then(data =>{\n                console.log(\"Successful\" + data);\n                this.props.history.push(\n                    `/gurus/${this.state.params.id}`\n                );\n            })\n        })\n    }\n\n    handleClearForm(e) {\n        e.preventDefault();\n        this.setState({\n            newGuru: {\n                blog: '',\n                undertone: '',\n                skin: '',\n                group: ''\n            },\n        })\n    }\n\n    handleInput(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState( prevState => {\n                return {\n                    newFoundation : {\n                        ...prevState.newFoundation, [name]: value\n                    }\n                }\n            }\n        )\n    }\n\n    render() {\n        return (\n            <form>\n                <Input\n                    inputType={\"text\"}\n                    title={\"Brand\"}\n                    name={\"brand\"}\n                    value={this.state.newFoundation.brand}\n                    placeholder={\"Mac\"}\n                    handleChange={this.handleInput}\n                />{\" \"}\n                <Input\n                    inputType={\"text\"}\n                    title={\"Shade Name\"}\n                    name={\"shade\"}\n                    value={this.state.newFoundation.shade}\n                    placeholder={\"NC30\"}\n                    handleChange={this.handleInput}\n                />{\" \"}\n                <Select\n                    title={\"Shade Category\"}\n                    name={\"group\"}\n                    options={this.state.shadeOptions}\n                    value={this.state.newFoundation.group}\n                    placeholder={\"Select Shade Category\"}\n                    handleChange={this.handleInput}\n                />{\" \"}\n                <FormButton variant=\"outlined\" color=\"primary\" type=\"submit\" action={this.handleFormSubmit.bind(this)} title={\"Submit\"}/>\n                <FormButton variant=\"outlined\" color=\"secondary\" title={\"Clear\"}/>\n\n            </form>\n        )\n\n    }\n}\n\nexport  default withRouter(FoundationForm);","import React, { Component } from 'react';\nimport FoundationForm from './foundationForm'\nimport Container from '@material-ui/core/Container';\n\nexport default class GuruFoundationNew extends Component {\n\n    render() {\n        return(\n            <Container>\n                <h1>Add A Foundation Shade</h1>\n                <FoundationForm/>\n            </Container>\n        )\n    }\n}","import React, { Component } from 'react';\nimport GuruForm from './guruForm'\nimport Container from '@material-ui/core/Container';\n\nexport default class GuruEdit extends Component {\n\n    render() {\n        return(\n            <Container>\n                <h1>Add Beauty Guru</h1>\n                <GuruForm/>\n            </Container>\n        )\n    }\n}","import React, { Component } from 'react';\nimport * as Sentry from '@sentry/browser';\nimport { Switch, BrowserRouter as Router } from 'react-router-dom'\nimport './App.css';\nimport KeyedRoute from './components/KeyedRoute'\nimport NavBar from \"./views/Nav/NavBar\";\nimport {Container} from \"@material-ui/core\";\nimport Guru from './views/Gurus/show'\nimport GuruNew from \"./views/Gurus/new\";\nimport GuruIndex from \"./views/Gurus\";\nimport GuruFoundationNew from \"./views/Foundations/new\";\nimport GuruEdit from \"./views/Gurus/edit\";\n\nSentry.init({dsn: \"https://28a51e6fa71a4511baa3544bf12a524c@sentry.io/1765085\"});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: {}\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n           <div>\n               <NavBar></NavBar>\n               <Container>\n                   <div id=\"content\">\n                       <Switch default={'/'}>\n                           <KeyedRoute exact path=\"/\" component={GuruIndex} />\n                           <KeyedRoute exact path=\"/gurus/:id/foundations/new\" component={GuruFoundationNew} />\n                           <KeyedRoute exact path=\"/gurus/new\" component={GuruNew} />\n                           <KeyedRoute exact path=\"/gurus/:id\" component={Guru} />\n                           <KeyedRoute exact path=\"/gurus/:id/edit\" component={GuruEdit} />\n                           <KeyedRoute exact path=\"/gurus\" component={GuruIndex} />\n\n                       </Switch>\n                   </div>\n               </Container>\n           </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}